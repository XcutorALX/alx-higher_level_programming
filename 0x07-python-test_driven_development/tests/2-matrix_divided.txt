The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Importing the function:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

dividing a 2 x 2 matrix of integers/floats by an integer/float:
	>>> matrix_divided([ [1, 2, 4] , [4, 5, 6] , [5, 7, 9]], 5)
	[[0.2, 0.4, 0.8], [0.8, 1.0, 1.2], [1.0, 1.4, 1.8]]

	>>> matrix_divided( [[2.5, 9.2, 7.3], [3.4, 8.7, 5.1], [3.1, 4.1, 7.5]], 8)
	[[0.31, 1.15, 0.91], [0.42, 1.09, 0.64], [0.39, 0.51, 0.94]]

dividing a 2 x 2 matrix by a str/dict/list
	>>> matrix_divided([ [1, 2, 4] , [4, 5, 6] , [5, 7, 9]], 'how')
	Traceback (most recent call last):
		...
	TypeError: div must be a number

        >>> matrix_divided([ [1, 2, 4] , [4, 5, 6] , [5, 7, 9]], {'how': 2})
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

        >>> matrix_divided([ [1, 2, 4] , [4, 5, 6] , [5, 7, 9]], ['how'])
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

dividing a matrix with unequal row lengths:
        >>> matrix_divided([ [1, 2, 4] , [4, 5] , [5, 7, 9]], 4)
        Traceback (most recent call last):
                ...
        TypeError: Each row of the matrix must have the same size

dividing a matrix that contains other data types:
        >>> matrix_divided([ [1, 2, 4] , ['4', 5, 6] , [5, 7, 9]], 9)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix(list of lists) of integers/floats
